{"ast":null,"code":"var _jsxFileName = \"/Users/abedjamous/Documents/FullStack_Academy/course_work/pubbyBowl-react/src/components/FetchAllPlayers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchAllPlayers = () => {\n  _s();\n  const [allPlayers, setAllPlayers] = useState([]);\n  const getAllPlayers = async () => {\n    try {\n      const response = await fetch(\"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-AM/players\");\n      const result = await response.json();\n      const playersArr = result.data.players;\n      setAllPlayers(playersArr);\n      if (result.error) {\n        throw result.error;\n      }\n      return result.data.players;\n    } catch (error) {\n      console.log(\"Uh oh, trouble fetching players!\", error);\n    }\n  };\n  useEffect(() => {\n    getAllPlayers();\n  }, []);\n  console.log(allPlayers[0]);\n  const renderPlayersList = allPlayers.map(player => {\n    return console.log(player);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"all-players-container\",\n    children: xnnm = allPlayers.map(player => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchAllPlayers, \"uxuwUh8Bcd9+Ua2zOb+Ak417/yE=\");\n_c = FetchAllPlayers;\nexport default FetchAllPlayers;\nvar _c;\n$RefreshReg$(_c, \"FetchAllPlayers\");","map":{"version":3,"names":["React","useState","useEffect","FetchAllPlayers","allPlayers","setAllPlayers","getAllPlayers","response","fetch","result","json","playersArr","data","players","error","console","log","renderPlayersList","map","player","xnnm"],"sources":["/Users/abedjamous/Documents/FullStack_Academy/course_work/pubbyBowl-react/src/components/FetchAllPlayers.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst FetchAllPlayers = () => {\n  const [allPlayers, setAllPlayers] = useState([]);\n  const getAllPlayers = async () => {\n    try {\n      const response = await fetch(\n        \"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-AM/players\"\n      );\n      const result = await response.json();\n      const playersArr = result.data.players;\n      setAllPlayers(playersArr);\n\n      if (result.error) {\n        throw result.error;\n      }\n      return result.data.players;\n    } catch (error) {\n      console.log(\"Uh oh, trouble fetching players!\", error);\n    }\n  };\n\n  useEffect(() => {\n    getAllPlayers();\n  }, []);\n\n  console.log(allPlayers[0]);\n\n  const renderPlayersList = allPlayers.map((player) => {\n    return console.log(player);\n  });\n\n  return (\n    <div id=\"all-players-container\">\n      {\n        (xnnm = allPlayers.map((player) => {\n          return <div>{player}</div>;\n        }))\n      }\n    </div>\n  );\n};\n\nexport default FetchAllPlayers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMK,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEAAqE,CACtE;MACD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACpC,MAAMC,UAAU,GAAGF,MAAM,CAACG,IAAI,CAACC,OAAO;MACtCR,aAAa,CAACM,UAAU,CAAC;MAEzB,IAAIF,MAAM,CAACK,KAAK,EAAE;QAChB,MAAML,MAAM,CAACK,KAAK;MACpB;MACA,OAAOL,MAAM,CAACG,IAAI,CAACC,OAAO;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,KAAK,CAAC;IACxD;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdI,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAENS,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC,CAAC,CAAC,CAAC;EAE1B,MAAMa,iBAAiB,GAAGb,UAAU,CAACc,GAAG,CAAEC,MAAM,IAAK;IACnD,OAAOJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;EAC5B,CAAC,CAAC;EAEF,oBACE;IAAK,EAAE,EAAC,uBAAuB;IAAA,UAE1BC,IAAI,GAAGhB,UAAU,CAACc,GAAG,CAAEC,MAAM,IAAK;MACjC,oBAAO;QAAA,UAAMA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAO;IAC5B,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV,CAAC;AAAC,GAvCIhB,eAAe;AAAA,KAAfA,eAAe;AAyCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}